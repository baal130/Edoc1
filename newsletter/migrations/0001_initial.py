# Generated by Django 2.2.6 on 2020-07-01 08:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import newsletter.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Insurancecompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='null', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Paymentmethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='null', max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='SignUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('full_name', models.CharField(max_length=120)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('surname', models.CharField(max_length=60)),
                ('adress', models.CharField(max_length=60)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(blank=True, choices=[('', 'Select_state'), ('Aguascalientes', 'AGUASCALIENTES'), ('Baja California', 'BAJA CALIFORNIA'), ('Baja California Sur', 'BAJA CALIFORNIA SUR'), ('Campeche', 'CAMPECHE'), ('Chiapas', 'CHIAPAS'), ('Mexico City', 'MEXICO CITY'), ('Chihuahua', 'CHIHUAHUA'), ('Coahuila', 'COAHUILA'), ('Colima', 'COLIMA'), ('Durango', 'DURANGO'), ('Guanajuato', 'GUANAJUATO'), ('Guerrero', 'GUERRERO'), ('Hidalgo', 'HIDALGO'), ('Jalisco', 'JALISCO'), ('Mexico', 'MEXICO'), ('Michoacan', 'MICHOACAN'), ('Morelos', 'MORELOS'), ('Nayarit', 'NAYARIT'), ('Nuevo Leon', 'NUEVO LEON'), ('Oaxaca', 'OAXACA'), ('Puebla', 'PUEBLA'), ('Queretaro', 'QUERETARO'), ('Quintana Roo', 'QUINTANA ROO'), ('San Luis Potosi', 'SAN LUIS POTOSI'), ('Sinaloa', 'SINALOA'), ('Sonora', 'SONORA'), ('Tabasco', 'TABASCO'), ('Tamaulipas', 'TAMAULIPAS'), ('Tlaxcala', 'TLAXCALA'), ('Veracruz', 'VERACRUZ'), ('Yucatan', 'YUCATAN'), ('Zacatecas', 'ZACATECAS')], max_length=40)),
                ('colony', models.CharField(blank=True, max_length=60, null=True)),
                ('telefon', models.IntegerField(blank=True, null=True)),
                ('startworkingtimeMonday', models.TimeField(default='08:00')),
                ('endworkingtimeMonday', models.TimeField(default='17:00')),
                ('mondaywork', models.BooleanField(default=True)),
                ('startworkingtimeTuesday', models.TimeField(default='08:00')),
                ('tuesdaywork', models.BooleanField(default=True)),
                ('endworkingtimeTuesday', models.TimeField(default='17:00')),
                ('startworkingtimeWednesday', models.TimeField(default='08:00')),
                ('wednesdaywork', models.BooleanField(default=True)),
                ('endworkingtimeWednesday', models.TimeField(default='17:00')),
                ('startworkingtimeThursday', models.TimeField(default='08:00')),
                ('thursdaywork', models.BooleanField(default=True)),
                ('endworkingtimeThursday', models.TimeField(default='17:00')),
                ('startworkingtimeFriday', models.TimeField(default='08:00')),
                ('endworkingtimeFriday', models.TimeField(default='17:00')),
                ('fridaywork', models.BooleanField(default=True)),
                ('startworkingtimeSaturday', models.TimeField(default='08:00')),
                ('endworkingtimeSaturday', models.TimeField(default='13:00')),
                ('saturdaywork', models.BooleanField(default=True)),
                ('startworkingtimeSunday', models.TimeField(default='08:00')),
                ('endworkingtimeSunday', models.TimeField(default='13:00')),
                ('sundaywork', models.BooleanField(default=False)),
                ('acceptpacients', models.BooleanField(default=True)),
                ('acceptanimales', models.BooleanField(default=False)),
                ('acceptchildren', models.BooleanField(default=False)),
                ('invalidsaccess', models.BooleanField(default=False)),
                ('englishspeaking', models.BooleanField(default=False)),
                ('specialprice', models.BooleanField(default=False)),
                ('homevisit', models.BooleanField(default=False)),
                ('emergencycalls', models.BooleanField(default=False)),
                ('web', models.URLField(default='null')),
                ('email', models.EmailField(blank=True, default='null', max_length=254)),
                ('verificated', models.BooleanField(default=False)),
                ('IdentificationUser', models.FileField(upload_to='')),
                ('occupancy', models.CharField(blank=True, choices=[('Pacient', 'PACIENT'), ('Doctor', 'DOCTOR'), ('STUDENT', 'STUDENT')], default='Pacient', max_length=40)),
                ('speciality', models.CharField(blank=True, max_length=60)),
                ('ratinghelp', models.IntegerField(default='5')),
                ('ratingkind', models.IntegerField(default='5')),
                ('ratingtime', models.IntegerField(default='5')),
                ('ratingstaff', models.IntegerField(default='5')),
                ('ratingethic', models.IntegerField(default='5')),
                ('slug', models.SlugField(unique=True)),
                ('lat', models.FloatField(blank=True, default=1.0, max_length=100)),
                ('lng', models.FloatField(blank=True, default=1.0, max_length=100)),
                ('about', models.TextField(blank=True)),
                ('imagehome1', models.ImageField(blank=True, null=True, upload_to=newsletter.models.uplodad_location)),
                ('imagehome2', models.ImageField(blank=True, null=True, upload_to=newsletter.models.uplodad_location)),
                ('imagehome3', models.ImageField(blank=True, null=True, upload_to=newsletter.models.uplodad_location)),
                ('imagehome1Text1', models.CharField(blank=True, max_length=60, null=True)),
                ('imagehome1Text2', models.CharField(blank=True, max_length=60, null=True)),
                ('imagehome2Text1', models.CharField(blank=True, max_length=60, null=True)),
                ('imagehome2Text2', models.CharField(blank=True, max_length=60, null=True)),
                ('imagehome3Text1', models.CharField(blank=True, max_length=60, null=True)),
                ('imagehome3Text2', models.CharField(blank=True, max_length=60, null=True)),
                ('profilepicture', models.ImageField(blank=True, null=True, upload_to=newsletter.models.uplodad_location)),
                ('followers', models.ManyToManyField(blank=True, related_name='is_following', to=settings.AUTH_USER_MODEL)),
                ('insurancecompany', models.ManyToManyField(to='newsletter.Insurancecompany')),
                ('paymentmethod', models.ManyToManyField(to='newsletter.Paymentmethod')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('flavicon', models.CharField(blank=True, max_length=60, null=True)),
                ('servicename', models.CharField(max_length=60)),
                ('servicetext', models.TextField(blank=True, max_length=120)),
                ('weburl', models.URLField(blank=True)),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsServicePackagePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.TextField(blank=True, null=True)),
                ('totalregularprice', models.IntegerField(blank=True, max_length=10, null=True)),
                ('packagepricediscount', models.IntegerField(blank=True, max_length=10, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('headdescription', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('packageimage', models.ImageField(blank=True, null=True, upload_to=newsletter.models.uplodad_location_package)),
                ('extragift', models.TextField(blank=True, null=True)),
                ('offerends', models.DateTimeField(blank=True, null=True)),
                ('offerstarts', models.DateTimeField(blank=True, null=True)),
                ('slug', models.SlugField()),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
                ('selectservice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetailsService')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsServiceSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicename', models.CharField(max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagehometeam', models.ImageField(blank=True, null=True, upload_to=newsletter.models.uplodad_location_gal)),
                ('weburl', models.URLField(blank=True)),
                ('teamname', models.CharField(blank=True, max_length=60, null=True)),
                ('teamtext', models.TextField(blank=True, max_length=120)),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsSocialNetworks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebookurl', models.URLField(blank=True)),
                ('linkedinurl', models.URLField(blank=True)),
                ('twitterurl', models.URLField(blank=True)),
                ('instagramurl', models.URLField(blank=True)),
                ('pinteresturl', models.URLField(blank=True)),
                ('youtubeurl', models.URLField(blank=True)),
                ('behanceurl', models.URLField(blank=True)),
                ('whatsupnumber', models.IntegerField(blank=True, default='0', null=True)),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsServicePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serviceprice', models.IntegerField(blank=True, max_length=10, null=True)),
                ('servicepricediscount', models.IntegerField(blank=True, default=0, max_length=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetailsService')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsServicePackagePriceRemark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descriptionremark', models.CharField(blank=True, max_length=100, null=True)),
                ('userdetailsservicepackageprice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetailsServicePackagePrice')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(default='5.0')),
                ('ratinghelp', models.IntegerField(default='5')),
                ('ratingkind', models.IntegerField(default='5')),
                ('ratingtime', models.IntegerField(default='5')),
                ('ratingstaff', models.IntegerField(default='5')),
                ('ratingethic', models.IntegerField(default='5')),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(blank=True, max_length=20, null=True)),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsGallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagehomegallery', models.ImageField(blank=True, null=True, upload_to=newsletter.models.uplodad_location_gal)),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsFeatured',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.FloatField(default=0)),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
            ],
        ),
        migrations.CreateModel(
            name='UserDetailsDepartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagehomedep', models.ImageField(blank=True, null=True, upload_to=newsletter.models.uplodad_location_gal)),
                ('weburl', models.URLField(blank=True)),
                ('departmentname', models.CharField(blank=True, max_length=60, null=True)),
                ('departmenttext', models.TextField(blank=True, max_length=120)),
                ('detail', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='newsletter.UserDetails')),
            ],
        ),
    ]
